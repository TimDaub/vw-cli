#!/usr/bin/env python 

import logging
import os
import sys

INFO = logging.INFO
DEBUG = logging.DEBUG
WARNING = logging.WARNING

#==========================================================================
#scheduler help
HELP_MAIN = """
Usage: scheduler run|plot [ARGS]
Run Scheduler engine then plot results.

Example flow:
  rm runresult.csv;  scheduler run  runresult.csv
  rm -rf plotresult_dir; scheduler plot runresult.csv plotresult_dir
  eog plotresult_dir
 """

#========================================================================
#scheduler run
import importlib

HELP_RUN = """
Usage: scheduler run RUNRESULT_CSV

 RUNRESULT_CSV -- string -- name of csv file to output
"""

def do_run():
    if len(sys.argv) not in [3]:
        print(HELP_RUN)
        sys.exit(0)

    #extract inputs
    assert sys.argv[1] == "run"
    runresult_csv = sys.argv[2]
    do_profile = False
    print(f"Arguments: RUNRESULT_CSV={runresult_csv}")

    #handle corner cases
    if os.path.exists(runresult_csv):
        print("\nOutput path '%s' already exists.  Exiting.\n" % runresult_csv)
        sys.exit(0)

    # go
    import engine
    engine.run(runresult_csv)
    print(f'Output file: {runresult_csv}')


#==========================================================================
#scheduler plot

HELP_PLOT = """
Usage: scheduler plot RUNRESULT_CSV PLOTRESULT_DIR

 RUNRESULT_CSV -- string -- input directory for csv file. 
 PLOTRESULT_DIR -- string -- output directory for png files. Can't exist yet.
"""

def do_plot():
    #got the right number of args?  If not, output help
    if len(sys.argv) not in [4]:
        print(HELP_PLOT)
        sys.exit(0)
    
    #extract inputs
    assert sys.argv[1] == "plot"
    runresult_csv = sys.argv[2]
    plotresult_dir = sys.argv[3]

    #
    print(f"Arguments: RUNRESULT_CSV={runresult_csv}, "
          "PLOTRESULT_DIR={output_pngdir}")
    print()

    #corner cases        
    if not os.path.exists(runresult_csv):
        print(f"Input filename '{runresult_csv}' does not exist. Exiting.")
        sys.exit(0)
        
    if os.path.exists(plotresult_dir):
        print(f"Output path '{plotresult_dir}' already exists. Exiting.")
        sys.exit(0)

    #get netlist module
    netlist_module = _importNetlistModule(netlist_str)
    netlist_plot_instrs_func = netlist_module.netlist_plotInstructions

    #main work    
    from util.plotutil import csvToPngs
    csvToPngs(runresult_csv, plotresult_dir, netlist_plot_instrs_func)

    print("Done")
    

#========================================================================
#main
def do_main():
    logging.basicConfig()
    logging.getLogger('master').setLevel(INFO)
    
    if len(sys.argv) == 1:
        print(HELP_MAIN)
                
    elif sys.argv[1] == "run":
        do_run()
                
    elif sys.argv[1] == "plot":
        do_plot()

    else:
        print(HELP_MAIN)

if __name__== '__main__':
    do_main()
